//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ForsaWebAPI.Persistance.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class forsawebEntities : DbContext
    {
        public forsawebEntities()
            : base("name=forsawebEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<USP_BestPriceView_GetBanksByTimePeriod_Result> USP_BestPriceView_GetBanksByTimePeriod(Nullable<int> userId, Nullable<int> timePeriodId, Nullable<int> pageNumber)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var timePeriodIdParameter = timePeriodId.HasValue ?
                new ObjectParameter("TimePeriodId", timePeriodId) :
                new ObjectParameter("TimePeriodId", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_BestPriceView_GetBanksByTimePeriod_Result>("USP_BestPriceView_GetBanksByTimePeriod", userIdParameter, timePeriodIdParameter, pageNumberParameter);
        }
    
        public virtual ObjectResult<USP_BestPriceView_GetBanksByTimePeriodK_Result> USP_BestPriceView_GetBanksByTimePeriodK(Nullable<int> timePeriodId, Nullable<int> pageNumber)
        {
            var timePeriodIdParameter = timePeriodId.HasValue ?
                new ObjectParameter("TimePeriodId", timePeriodId) :
                new ObjectParameter("TimePeriodId", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_BestPriceView_GetBanksByTimePeriodK_Result>("USP_BestPriceView_GetBanksByTimePeriodK", timePeriodIdParameter, pageNumberParameter);
        }
    
        public virtual ObjectResult<USP_BestPriceView_GetRatesByTimePeriod_Result> USP_BestPriceView_GetRatesByTimePeriod(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_BestPriceView_GetRatesByTimePeriod_Result>("USP_BestPriceView_GetRatesByTimePeriod", userIdParameter);
        }
    
        public virtual ObjectResult<USP_BestPriceView_GetRatesByTimePeriodK_Result> USP_BestPriceView_GetRatesByTimePeriodK()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_BestPriceView_GetRatesByTimePeriodK_Result>("USP_BestPriceView_GetRatesByTimePeriodK");
        }
    
        public virtual ObjectResult<USP_CheckIfPasswordIsCorrect_Result> USP_CheckIfPasswordIsCorrect(Nullable<int> userId, string password)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CheckIfPasswordIsCorrect_Result>("USP_CheckIfPasswordIsCorrect", userIdParameter, passwordParameter);
        }
    
        public virtual ObjectResult<USP_CheckIfUserEmailIdExist_Result> USP_CheckIfUserEmailIdExist(string emailId)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CheckIfUserEmailIdExist_Result>("USP_CheckIfUserEmailIdExist", emailIdParameter);
        }
    
        public virtual ObjectResult<USP_CheckIfUserNameExist_Result> USP_CheckIfUserNameExist(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CheckIfUserNameExist_Result>("USP_CheckIfUserNameExist", userNameParameter);
        }
    
        public virtual int USP_DeselectBank(Nullable<int> userId, Nullable<int> bankId, Nullable<bool> isSelected)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var isSelectedParameter = isSelected.HasValue ?
                new ObjectParameter("IsSelected", isSelected) :
                new ObjectParameter("IsSelected", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_DeselectBank", userIdParameter, bankIdParameter, isSelectedParameter);
        }
    
        public virtual int USP_GetAllBanksWithInterestRateHorizontaly(Nullable<int> userId, string orderBy)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GetAllBanksWithInterestRateHorizontaly", userIdParameter, orderByParameter);
        }
    
        public virtual int USP_GetAllBanksWithInterestRateHorizontalyForKontactUser(string orderBy)
        {
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GetAllBanksWithInterestRateHorizontalyForKontactUser", orderByParameter);
        }
    
        public virtual int USP_GetAllBanksWithInterestRateHorizontalyWhichAreNotDeSelected(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GetAllBanksWithInterestRateHorizontalyWhichAreNotDeSelected", userIdParameter);
        }
    
        public virtual int USP_GetAllBanksWithInterestRateHorizontalyWhichAreNotDeSelectedK(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GetAllBanksWithInterestRateHorizontalyWhichAreNotDeSelectedK", userIdParameter);
        }
    
        public virtual ObjectResult<USP_GetCountryList_Result> USP_GetCountryList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetCountryList_Result>("USP_GetCountryList");
        }
    
        public virtual ObjectResult<USP_GetDepositInsurance_Result> USP_GetDepositInsurance()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetDepositInsurance_Result>("USP_GetDepositInsurance");
        }
    
        public virtual ObjectResult<USP_GetGroup_Result> USP_GetGroup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetGroup_Result>("USP_GetGroup");
        }
    
        public virtual ObjectResult<USP_GetLanguageList_Result> USP_GetLanguageList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetLanguageList_Result>("USP_GetLanguageList");
        }
    
        public virtual ObjectResult<USP_GetLenderSendRequestPendingLendedRequestByLenderId_Result> USP_GetLenderSendRequestPendingLendedRequestByLenderId(Nullable<int> lenderId)
        {
            var lenderIdParameter = lenderId.HasValue ?
                new ObjectParameter("LenderId", lenderId) :
                new ObjectParameter("LenderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetLenderSendRequestPendingLendedRequestByLenderId_Result>("USP_GetLenderSendRequestPendingLendedRequestByLenderId", lenderIdParameter);
        }
    
        public virtual ObjectResult<USP_GetLenderSendRequestRequestdOnTheBasisOfBorrowerId_Result> USP_GetLenderSendRequestRequestdOnTheBasisOfBorrowerId(Nullable<int> borrowerId)
        {
            var borrowerIdParameter = borrowerId.HasValue ?
                new ObjectParameter("BorrowerId", borrowerId) :
                new ObjectParameter("BorrowerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetLenderSendRequestRequestdOnTheBasisOfBorrowerId_Result>("USP_GetLenderSendRequestRequestdOnTheBasisOfBorrowerId", borrowerIdParameter);
        }
    
        public virtual ObjectResult<string> USP_GetLenderStartPage(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_GetLenderStartPage", userIdParameter);
        }
    
        public virtual ObjectResult<USP_GetMaturityList_Result> USP_GetMaturityList(Nullable<bool> history, Nullable<int> borrowId, Nullable<int> lenderId)
        {
            var historyParameter = history.HasValue ?
                new ObjectParameter("History", history) :
                new ObjectParameter("History", typeof(bool));
    
            var borrowIdParameter = borrowId.HasValue ?
                new ObjectParameter("BorrowId", borrowId) :
                new ObjectParameter("BorrowId", typeof(int));
    
            var lenderIdParameter = lenderId.HasValue ?
                new ObjectParameter("LenderId", lenderId) :
                new ObjectParameter("LenderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetMaturityList_Result>("USP_GetMaturityList", historyParameter, borrowIdParameter, lenderIdParameter);
        }
    
        public virtual ObjectResult<USP_GetPagesForLenderSettingStartPage_Result> USP_GetPagesForLenderSettingStartPage(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetPagesForLenderSettingStartPage_Result>("USP_GetPagesForLenderSettingStartPage", userIdParameter);
        }
    
        public virtual ObjectResult<USP_GetRateOfInterestOfBank_Result> USP_GetRateOfInterestOfBank(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetRateOfInterestOfBank_Result>("USP_GetRateOfInterestOfBank", userIdParameter);
        }
    
        public virtual ObjectResult<USP_GetRatingAgeNtur_Result> USP_GetRatingAgeNtur()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetRatingAgeNtur_Result>("USP_GetRatingAgeNtur");
        }
    
        public virtual ObjectResult<USP_GetSalutation_Result> USP_GetSalutation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetSalutation_Result>("USP_GetSalutation");
        }
    
        public virtual ObjectResult<USP_GetSubGroup_Result> USP_GetSubGroup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetSubGroup_Result>("USP_GetSubGroup");
        }
    
        public virtual ObjectResult<USP_GetUserById_Result> USP_GetUserById(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetUserById_Result>("USP_GetUserById", userIdParameter);
        }
    
        public virtual ObjectResult<USP_GetUserDetailById_Result> USP_GetUserDetailById(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetUserDetailById_Result>("USP_GetUserDetailById", userIdParameter);
        }
    
        public virtual ObjectResult<USP_GetUserGroupForSettingRateOfInterestVisibility_Result> USP_GetUserGroupForSettingRateOfInterestVisibility(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetUserGroupForSettingRateOfInterestVisibility_Result>("USP_GetUserGroupForSettingRateOfInterestVisibility", userIdParameter);
        }
    
        public virtual ObjectResult<USP_GetUserPassword_Result> USP_GetUserPassword(string emailaddress)
        {
            var emailaddressParameter = emailaddress != null ?
                new ObjectParameter("emailaddress", emailaddress) :
                new ObjectParameter("emailaddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetUserPassword_Result>("USP_GetUserPassword", emailaddressParameter);
        }
    
        public virtual int USP_InsertUser(string nameOfCompany, string street, string postalCode, string place, string accountHolder, string bank, string iBAN, string bICCode, string groupIds, string subGroupId, string lEINumber, string furtherField4, Nullable<int> salutation, string title, string firstName, string surName, string contactNumber, string emailAddress, string userName, string password, string furtherField1, string furtherField2, string furtherField3, string userTypeId, string ratingAgentur1, string ratingAgenturValue1, string ratingAgentur2, string ratingAgenturValue2, Nullable<int> depositInsurance, Nullable<int> clientGroupId, Nullable<bool> agreeToThePrivacyPolicy, Nullable<bool> agreeToTheRatingsMayPublish, Nullable<bool> agreeThatInformationOfCompanyMayBePublished, Nullable<bool> acceptAGBS, string commercialRegisterExtract, string identityCard)
        {
            var nameOfCompanyParameter = nameOfCompany != null ?
                new ObjectParameter("NameOfCompany", nameOfCompany) :
                new ObjectParameter("NameOfCompany", typeof(string));
    
            var streetParameter = street != null ?
                new ObjectParameter("Street", street) :
                new ObjectParameter("Street", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var placeParameter = place != null ?
                new ObjectParameter("Place", place) :
                new ObjectParameter("Place", typeof(string));
    
            var accountHolderParameter = accountHolder != null ?
                new ObjectParameter("AccountHolder", accountHolder) :
                new ObjectParameter("AccountHolder", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var iBANParameter = iBAN != null ?
                new ObjectParameter("IBAN", iBAN) :
                new ObjectParameter("IBAN", typeof(string));
    
            var bICCodeParameter = bICCode != null ?
                new ObjectParameter("BICCode", bICCode) :
                new ObjectParameter("BICCode", typeof(string));
    
            var groupIdsParameter = groupIds != null ?
                new ObjectParameter("GroupIds", groupIds) :
                new ObjectParameter("GroupIds", typeof(string));
    
            var subGroupIdParameter = subGroupId != null ?
                new ObjectParameter("SubGroupId", subGroupId) :
                new ObjectParameter("SubGroupId", typeof(string));
    
            var lEINumberParameter = lEINumber != null ?
                new ObjectParameter("LEINumber", lEINumber) :
                new ObjectParameter("LEINumber", typeof(string));
    
            var furtherField4Parameter = furtherField4 != null ?
                new ObjectParameter("FurtherField4", furtherField4) :
                new ObjectParameter("FurtherField4", typeof(string));
    
            var salutationParameter = salutation.HasValue ?
                new ObjectParameter("Salutation", salutation) :
                new ObjectParameter("Salutation", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var surNameParameter = surName != null ?
                new ObjectParameter("SurName", surName) :
                new ObjectParameter("SurName", typeof(string));
    
            var contactNumberParameter = contactNumber != null ?
                new ObjectParameter("ContactNumber", contactNumber) :
                new ObjectParameter("ContactNumber", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var furtherField1Parameter = furtherField1 != null ?
                new ObjectParameter("FurtherField1", furtherField1) :
                new ObjectParameter("FurtherField1", typeof(string));
    
            var furtherField2Parameter = furtherField2 != null ?
                new ObjectParameter("FurtherField2", furtherField2) :
                new ObjectParameter("FurtherField2", typeof(string));
    
            var furtherField3Parameter = furtherField3 != null ?
                new ObjectParameter("FurtherField3", furtherField3) :
                new ObjectParameter("FurtherField3", typeof(string));
    
            var userTypeIdParameter = userTypeId != null ?
                new ObjectParameter("UserTypeId", userTypeId) :
                new ObjectParameter("UserTypeId", typeof(string));
    
            var ratingAgentur1Parameter = ratingAgentur1 != null ?
                new ObjectParameter("RatingAgentur1", ratingAgentur1) :
                new ObjectParameter("RatingAgentur1", typeof(string));
    
            var ratingAgenturValue1Parameter = ratingAgenturValue1 != null ?
                new ObjectParameter("RatingAgenturValue1", ratingAgenturValue1) :
                new ObjectParameter("RatingAgenturValue1", typeof(string));
    
            var ratingAgentur2Parameter = ratingAgentur2 != null ?
                new ObjectParameter("RatingAgentur2", ratingAgentur2) :
                new ObjectParameter("RatingAgentur2", typeof(string));
    
            var ratingAgenturValue2Parameter = ratingAgenturValue2 != null ?
                new ObjectParameter("RatingAgenturValue2", ratingAgenturValue2) :
                new ObjectParameter("RatingAgenturValue2", typeof(string));
    
            var depositInsuranceParameter = depositInsurance.HasValue ?
                new ObjectParameter("DepositInsurance", depositInsurance) :
                new ObjectParameter("DepositInsurance", typeof(int));
    
            var clientGroupIdParameter = clientGroupId.HasValue ?
                new ObjectParameter("ClientGroupId", clientGroupId) :
                new ObjectParameter("ClientGroupId", typeof(int));
    
            var agreeToThePrivacyPolicyParameter = agreeToThePrivacyPolicy.HasValue ?
                new ObjectParameter("AgreeToThePrivacyPolicy", agreeToThePrivacyPolicy) :
                new ObjectParameter("AgreeToThePrivacyPolicy", typeof(bool));
    
            var agreeToTheRatingsMayPublishParameter = agreeToTheRatingsMayPublish.HasValue ?
                new ObjectParameter("AgreeToTheRatingsMayPublish", agreeToTheRatingsMayPublish) :
                new ObjectParameter("AgreeToTheRatingsMayPublish", typeof(bool));
    
            var agreeThatInformationOfCompanyMayBePublishedParameter = agreeThatInformationOfCompanyMayBePublished.HasValue ?
                new ObjectParameter("AgreeThatInformationOfCompanyMayBePublished", agreeThatInformationOfCompanyMayBePublished) :
                new ObjectParameter("AgreeThatInformationOfCompanyMayBePublished", typeof(bool));
    
            var acceptAGBSParameter = acceptAGBS.HasValue ?
                new ObjectParameter("AcceptAGBS", acceptAGBS) :
                new ObjectParameter("AcceptAGBS", typeof(bool));
    
            var commercialRegisterExtractParameter = commercialRegisterExtract != null ?
                new ObjectParameter("CommercialRegisterExtract", commercialRegisterExtract) :
                new ObjectParameter("CommercialRegisterExtract", typeof(string));
    
            var identityCardParameter = identityCard != null ?
                new ObjectParameter("IdentityCard", identityCard) :
                new ObjectParameter("IdentityCard", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_InsertUser", nameOfCompanyParameter, streetParameter, postalCodeParameter, placeParameter, accountHolderParameter, bankParameter, iBANParameter, bICCodeParameter, groupIdsParameter, subGroupIdParameter, lEINumberParameter, furtherField4Parameter, salutationParameter, titleParameter, firstNameParameter, surNameParameter, contactNumberParameter, emailAddressParameter, userNameParameter, passwordParameter, furtherField1Parameter, furtherField2Parameter, furtherField3Parameter, userTypeIdParameter, ratingAgentur1Parameter, ratingAgenturValue1Parameter, ratingAgentur2Parameter, ratingAgenturValue2Parameter, depositInsuranceParameter, clientGroupIdParameter, agreeToThePrivacyPolicyParameter, agreeToTheRatingsMayPublishParameter, agreeThatInformationOfCompanyMayBePublishedParameter, acceptAGBSParameter, commercialRegisterExtractParameter, identityCardParameter);
        }
    
        public virtual ObjectResult<USP_Lender_GetAllBanksWithStatusIsDeselected_Result> USP_Lender_GetAllBanksWithStatusIsDeselected(Nullable<int> userId, Nullable<int> pageNumber)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_Lender_GetAllBanksWithStatusIsDeselected_Result>("USP_Lender_GetAllBanksWithStatusIsDeselected", userIdParameter, pageNumberParameter);
        }
    
        public virtual int USP_Lender_SaveSendRequest(Nullable<int> lenderId, Nullable<int> borrowerId, Nullable<decimal> amount, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> noOfDays, string interestConvention, string payments, Nullable<bool> isRequestAccepted)
        {
            var lenderIdParameter = lenderId.HasValue ?
                new ObjectParameter("LenderId", lenderId) :
                new ObjectParameter("LenderId", typeof(int));
    
            var borrowerIdParameter = borrowerId.HasValue ?
                new ObjectParameter("BorrowerId", borrowerId) :
                new ObjectParameter("BorrowerId", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var noOfDaysParameter = noOfDays.HasValue ?
                new ObjectParameter("NoOfDays", noOfDays) :
                new ObjectParameter("NoOfDays", typeof(int));
    
            var interestConventionParameter = interestConvention != null ?
                new ObjectParameter("InterestConvention", interestConvention) :
                new ObjectParameter("InterestConvention", typeof(string));
    
            var paymentsParameter = payments != null ?
                new ObjectParameter("Payments", payments) :
                new ObjectParameter("Payments", typeof(string));
    
            var isRequestAcceptedParameter = isRequestAccepted.HasValue ?
                new ObjectParameter("IsRequestAccepted", isRequestAccepted) :
                new ObjectParameter("IsRequestAccepted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_Lender_SaveSendRequest", lenderIdParameter, borrowerIdParameter, amountParameter, startDateParameter, endDateParameter, noOfDaysParameter, interestConventionParameter, paymentsParameter, isRequestAcceptedParameter);
        }
    
        public virtual int USP_LenderSaveStartPage(Nullable<int> userId, Nullable<int> pageId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageIdParameter = pageId.HasValue ?
                new ObjectParameter("PageId", pageId) :
                new ObjectParameter("PageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_LenderSaveStartPage", userIdParameter, pageIdParameter);
        }
    
        public virtual int USP_LenderSendRequest_AcceptLendedRequest(Nullable<bool> isAccepted, Nullable<int> requestId)
        {
            var isAcceptedParameter = isAccepted.HasValue ?
                new ObjectParameter("IsAccepted", isAccepted) :
                new ObjectParameter("IsAccepted", typeof(bool));
    
            var requestIdParameter = requestId.HasValue ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_LenderSendRequest_AcceptLendedRequest", isAcceptedParameter, requestIdParameter);
        }
    
        public virtual int USP_LenderSendRequest_RejectLendedRequest(Nullable<bool> isRejected, Nullable<int> requestId)
        {
            var isRejectedParameter = isRejected.HasValue ?
                new ObjectParameter("IsRejected", isRejected) :
                new ObjectParameter("IsRejected", typeof(bool));
    
            var requestIdParameter = requestId.HasValue ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_LenderSendRequest_RejectLendedRequest", isRejectedParameter, requestIdParameter);
        }
    
        public virtual int USP_LenderSendRequest_SaveForsaMEssage(string messageForForsa, Nullable<bool> isMessageSentToForsa, Nullable<int> requestId)
        {
            var messageForForsaParameter = messageForForsa != null ?
                new ObjectParameter("MessageForForsa", messageForForsa) :
                new ObjectParameter("MessageForForsa", typeof(string));
    
            var isMessageSentToForsaParameter = isMessageSentToForsa.HasValue ?
                new ObjectParameter("IsMessageSentToForsa", isMessageSentToForsa) :
                new ObjectParameter("IsMessageSentToForsa", typeof(bool));
    
            var requestIdParameter = requestId.HasValue ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_LenderSendRequest_SaveForsaMEssage", messageForForsaParameter, isMessageSentToForsaParameter, requestIdParameter);
        }
    
        public virtual int USP_LenderSendRequest_UpdateRateOfInterest(Nullable<decimal> rateOfInterestOfferred, Nullable<int> requestId)
        {
            var rateOfInterestOfferredParameter = rateOfInterestOfferred.HasValue ?
                new ObjectParameter("RateOfInterestOfferred", rateOfInterestOfferred) :
                new ObjectParameter("RateOfInterestOfferred", typeof(decimal));
    
            var requestIdParameter = requestId.HasValue ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_LenderSendRequest_UpdateRateOfInterest", rateOfInterestOfferredParameter, requestIdParameter);
        }
    
        public virtual int USP_PublishAndUnPublish(Nullable<int> userId, Nullable<bool> isPublished)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var isPublishedParameter = isPublished.HasValue ?
                new ObjectParameter("IsPublished", isPublished) :
                new ObjectParameter("IsPublished", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_PublishAndUnPublish", userIdParameter, isPublishedParameter);
        }
    
        public virtual int USP_UpdateRateOfInterestOfBank(Nullable<int> id, Nullable<decimal> rateOfInterest, Nullable<int> modifiedby)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var rateOfInterestParameter = rateOfInterest.HasValue ?
                new ObjectParameter("RateOfInterest", rateOfInterest) :
                new ObjectParameter("RateOfInterest", typeof(decimal));
    
            var modifiedbyParameter = modifiedby.HasValue ?
                new ObjectParameter("Modifiedby", modifiedby) :
                new ObjectParameter("Modifiedby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UpdateRateOfInterestOfBank", idParameter, rateOfInterestParameter, modifiedbyParameter);
        }
    
        public virtual int USP_UpdateUser(string firstName, string surName, string nameOfCompany, string password, Nullable<int> userId)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var surNameParameter = surName != null ?
                new ObjectParameter("SurName", surName) :
                new ObjectParameter("SurName", typeof(string));
    
            var nameOfCompanyParameter = nameOfCompany != null ?
                new ObjectParameter("NameOfCompany", nameOfCompany) :
                new ObjectParameter("NameOfCompany", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UpdateUser", firstNameParameter, surNameParameter, nameOfCompanyParameter, passwordParameter, userIdParameter);
        }
    
        public virtual int USP_UpdateUserGroupAgainstBankWhomRateOfInterestWillBeVisible(Nullable<int> userId, string groupIds)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var groupIdsParameter = groupIds != null ?
                new ObjectParameter("GroupIds", groupIds) :
                new ObjectParameter("GroupIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UpdateUserGroupAgainstBankWhomRateOfInterestWillBeVisible", userIdParameter, groupIdsParameter);
        }
    
        public virtual int USP_UpdateUserInformation(Nullable<int> userId, string nameOfCompany, string street, string postalCode, string place, string accountHolder, string bank, string iBAN, string bICCode, string groupIds, string subGroupId, string lEINumber, string furtherField4, Nullable<int> salutation, string title, string firstName, string surName, string contactNumber, string furtherField1, string furtherField2, string furtherField3, string userTypeId, string ratingAgentur1, string ratingAgenturValue1, string ratingAgentur2, string ratingAgenturValue2, Nullable<int> depositInsurance, Nullable<int> clientGroupId, Nullable<bool> agreeToThePrivacyPolicy, Nullable<bool> agreeToTheRatingsMayPublish, Nullable<bool> agreeThatInformationOfCompanyMayBePublished, Nullable<bool> acceptAGBS)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var nameOfCompanyParameter = nameOfCompany != null ?
                new ObjectParameter("NameOfCompany", nameOfCompany) :
                new ObjectParameter("NameOfCompany", typeof(string));
    
            var streetParameter = street != null ?
                new ObjectParameter("Street", street) :
                new ObjectParameter("Street", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var placeParameter = place != null ?
                new ObjectParameter("Place", place) :
                new ObjectParameter("Place", typeof(string));
    
            var accountHolderParameter = accountHolder != null ?
                new ObjectParameter("AccountHolder", accountHolder) :
                new ObjectParameter("AccountHolder", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var iBANParameter = iBAN != null ?
                new ObjectParameter("IBAN", iBAN) :
                new ObjectParameter("IBAN", typeof(string));
    
            var bICCodeParameter = bICCode != null ?
                new ObjectParameter("BICCode", bICCode) :
                new ObjectParameter("BICCode", typeof(string));
    
            var groupIdsParameter = groupIds != null ?
                new ObjectParameter("GroupIds", groupIds) :
                new ObjectParameter("GroupIds", typeof(string));
    
            var subGroupIdParameter = subGroupId != null ?
                new ObjectParameter("SubGroupId", subGroupId) :
                new ObjectParameter("SubGroupId", typeof(string));
    
            var lEINumberParameter = lEINumber != null ?
                new ObjectParameter("LEINumber", lEINumber) :
                new ObjectParameter("LEINumber", typeof(string));
    
            var furtherField4Parameter = furtherField4 != null ?
                new ObjectParameter("FurtherField4", furtherField4) :
                new ObjectParameter("FurtherField4", typeof(string));
    
            var salutationParameter = salutation.HasValue ?
                new ObjectParameter("Salutation", salutation) :
                new ObjectParameter("Salutation", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var surNameParameter = surName != null ?
                new ObjectParameter("SurName", surName) :
                new ObjectParameter("SurName", typeof(string));
    
            var contactNumberParameter = contactNumber != null ?
                new ObjectParameter("ContactNumber", contactNumber) :
                new ObjectParameter("ContactNumber", typeof(string));
    
            var furtherField1Parameter = furtherField1 != null ?
                new ObjectParameter("FurtherField1", furtherField1) :
                new ObjectParameter("FurtherField1", typeof(string));
    
            var furtherField2Parameter = furtherField2 != null ?
                new ObjectParameter("FurtherField2", furtherField2) :
                new ObjectParameter("FurtherField2", typeof(string));
    
            var furtherField3Parameter = furtherField3 != null ?
                new ObjectParameter("FurtherField3", furtherField3) :
                new ObjectParameter("FurtherField3", typeof(string));
    
            var userTypeIdParameter = userTypeId != null ?
                new ObjectParameter("UserTypeId", userTypeId) :
                new ObjectParameter("UserTypeId", typeof(string));
    
            var ratingAgentur1Parameter = ratingAgentur1 != null ?
                new ObjectParameter("RatingAgentur1", ratingAgentur1) :
                new ObjectParameter("RatingAgentur1", typeof(string));
    
            var ratingAgenturValue1Parameter = ratingAgenturValue1 != null ?
                new ObjectParameter("RatingAgenturValue1", ratingAgenturValue1) :
                new ObjectParameter("RatingAgenturValue1", typeof(string));
    
            var ratingAgentur2Parameter = ratingAgentur2 != null ?
                new ObjectParameter("RatingAgentur2", ratingAgentur2) :
                new ObjectParameter("RatingAgentur2", typeof(string));
    
            var ratingAgenturValue2Parameter = ratingAgenturValue2 != null ?
                new ObjectParameter("RatingAgenturValue2", ratingAgenturValue2) :
                new ObjectParameter("RatingAgenturValue2", typeof(string));
    
            var depositInsuranceParameter = depositInsurance.HasValue ?
                new ObjectParameter("DepositInsurance", depositInsurance) :
                new ObjectParameter("DepositInsurance", typeof(int));
    
            var clientGroupIdParameter = clientGroupId.HasValue ?
                new ObjectParameter("ClientGroupId", clientGroupId) :
                new ObjectParameter("ClientGroupId", typeof(int));
    
            var agreeToThePrivacyPolicyParameter = agreeToThePrivacyPolicy.HasValue ?
                new ObjectParameter("AgreeToThePrivacyPolicy", agreeToThePrivacyPolicy) :
                new ObjectParameter("AgreeToThePrivacyPolicy", typeof(bool));
    
            var agreeToTheRatingsMayPublishParameter = agreeToTheRatingsMayPublish.HasValue ?
                new ObjectParameter("AgreeToTheRatingsMayPublish", agreeToTheRatingsMayPublish) :
                new ObjectParameter("AgreeToTheRatingsMayPublish", typeof(bool));
    
            var agreeThatInformationOfCompanyMayBePublishedParameter = agreeThatInformationOfCompanyMayBePublished.HasValue ?
                new ObjectParameter("AgreeThatInformationOfCompanyMayBePublished", agreeThatInformationOfCompanyMayBePublished) :
                new ObjectParameter("AgreeThatInformationOfCompanyMayBePublished", typeof(bool));
    
            var acceptAGBSParameter = acceptAGBS.HasValue ?
                new ObjectParameter("AcceptAGBS", acceptAGBS) :
                new ObjectParameter("AcceptAGBS", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UpdateUserInformation", userIdParameter, nameOfCompanyParameter, streetParameter, postalCodeParameter, placeParameter, accountHolderParameter, bankParameter, iBANParameter, bICCodeParameter, groupIdsParameter, subGroupIdParameter, lEINumberParameter, furtherField4Parameter, salutationParameter, titleParameter, firstNameParameter, surNameParameter, contactNumberParameter, furtherField1Parameter, furtherField2Parameter, furtherField3Parameter, userTypeIdParameter, ratingAgentur1Parameter, ratingAgenturValue1Parameter, ratingAgentur2Parameter, ratingAgenturValue2Parameter, depositInsuranceParameter, clientGroupIdParameter, agreeToThePrivacyPolicyParameter, agreeToTheRatingsMayPublishParameter, agreeThatInformationOfCompanyMayBePublishedParameter, acceptAGBSParameter);
        }
    
        public virtual ObjectResult<USP_ValidateUser_Result> USP_ValidateUser(string userName, string password, string emailaddress)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var emailaddressParameter = emailaddress != null ?
                new ObjectParameter("emailaddress", emailaddress) :
                new ObjectParameter("emailaddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ValidateUser_Result>("USP_ValidateUser", userNameParameter, passwordParameter, emailaddressParameter);
        }
    
        public virtual ObjectResult<USP_VerifyEmailAddress_Result> USP_VerifyEmailAddress(string emailaddress)
        {
            var emailaddressParameter = emailaddress != null ?
                new ObjectParameter("emailaddress", emailaddress) :
                new ObjectParameter("emailaddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_VerifyEmailAddress_Result>("USP_VerifyEmailAddress", emailaddressParameter);
        }
    }
}
